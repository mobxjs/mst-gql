type User {
  id: ID
  name: String!
  avatar: String!
}
type Message {
  id: ID
  timestamp: Float!
  user: User!
  text: String!
  likes: [User!]
  replyTo: Message
}
type Query {
  search(searchText: String!): [SearchResult!]
  messages(offset: ID, count: Int, replyTo: ID): [Message]
  message(id: ID!): Message
  me: User
}
type Subscription {
  newMessages: Message
}
type Mutation {
  changeName(id: ID!, name: String!): User
  like(msg: ID!, user: ID!): Message
  postTweet(text: String!, user: ID!, replyTo: ID): Message
}

union SearchResult = User | Message
